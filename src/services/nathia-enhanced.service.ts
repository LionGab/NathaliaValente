/**
 * NathIA Enhanced Service
 * Sistema de IA personalizado para ClubNath VIP
 * Focado exclusivamente em maternidade e nunca foge do contexto
 */

// import { logInfo, logDebug, handleError } from '../lib/errorHandler';

// Fun√ß√µes de log tempor√°rias para build
const logInfo = (message: string, context: any) => {
  if (import.meta.env.DEV) {
    console.log(`[INFO] ${message}`, context);
  }
};

const logDebug = (message: string, context: any) => {
  if (import.meta.env.DEV) {
    console.log(`[DEBUG] ${message}`, context);
  }
};

const handleError = (error: Error, context: any, feature: string) => {
  console.error(`[ERROR] ${feature}:`, error.message, context);
};

interface NathIAContext {
    userId: string;
    chatHistory: any[];
    userProfile: any;
    currentTopic: string | null;
    emotionalState: 'calm' | 'anxious' | 'overwhelmed' | 'happy' | 'frustrated';
    previousTopics: string[];
    userPreferences: {
        responseStyle: 'warm' | 'direct' | 'spiritual' | 'practical';
        includeScripture: boolean;
        includePracticalTips: boolean;
    };
}

interface NathIAResponse {
    message: string;
    emotionalTone: string;
    responseType: string;
    suggestedActions?: string[];
    scripture?: string;
    practicalTips?: string[];
    followUpQuestions?: string[];
}

/**
 * Sistema de valida√ß√£o para manter contexto de maternidade
 */
const validateMaternityContext = (message: string): boolean => {
    const maternityKeywords = [
        // Maternidade geral
        'm√£e', 'maternidade', 'filho', 'filha', 'crian√ßa', 'beb√™', 'gravidez', 'parto',
        'amamenta√ß√£o', 'mam√£e', 'papai', 'pai', 'fam√≠lia', 'parentalidade',

        // Desenvolvimento infantil
        'birra', 'birras', 'comportamento', 'desenvolvimento', 'crescimento', 'aprendizado',
        'sono', 'dormir', 'ins√¥nia', 'pesadelo', 'sonambulismo',
        'alimenta√ß√£o', 'comida', 'comer', 'nutri√ß√£o', 'dieta', 'mamadeira', 'papinha',
        'rotina', 'organizar', 'cronograma', 'hor√°rio', 'agenda',

        // Emo√ß√µes e bem-estar
        'culpa', 'culpada', 'sobrecarregada', 'cansada', 'exausta', 'estressada',
        'ansiosa', 'preocupada', 'triste', 'feliz', 'orgulhosa', 'gratid√£o',
        'bem-estar', 'sa√∫de', 'exerc√≠cio', 'medita√ß√£o', 'relaxamento',

        // Relacionamentos
        'casamento', 'marido', 'esposo', 'namorado', 'namorada', 'relacionamento',
        'conflito', 'briga', 'discuss√£o', 'comunica√ß√£o', 'intimidade',

        // Espiritualidade
        'b√≠blico', 'b√≠blia', 'ora√ß√£o', 'orar', 'rezar', 'f√©', 'espiritual',
        'vers√≠culo', 'estudo', 'reflex√£o', 'deus', 'jesus', 'cristo',
        'igreja', 'pastor', 'minist√©rio', 'evangelho',

        // Educa√ß√£o e carreira
        'escola', 'professor', 'educa√ß√£o', 'aprender', 'ensinar', 'brincadeira',
        'brinquedo', 'divers√£o', 'criatividade', 'carreira', 'trabalho', 'emprego',
        'neg√≥cio', 'empreendedorismo', 'finan√ßas', 'dinheiro', 'economia',

        // Sa√∫de e cuidados
        'm√©dico', 'pediatra', 'vacina', 'doen√ßa', 'febre', 'gripe', 'resfriado',
        'alergia', 'medicamento', 'tratamento', 'hospital', 'emerg√™ncia'
    ];

    const messageLower = message.toLowerCase();
    return maternityKeywords.some(keyword => messageLower.includes(keyword));
};

/**
 * Analisa o estado emocional da usu√°ria baseado na mensagem
 */
const analyzeEmotionalState = (message: string, history: any[]): NathIAContext['emotionalState'] => {
    const messageLower = message.toLowerCase();

    // Palavras que indicam ansiedade
    if (messageLower.includes('ansiosa') || messageLower.includes('preocupada') ||
        messageLower.includes('nervosa') || messageLower.includes('medo')) {
        return 'anxious';
    }

    // Palavras que indicam sobrecarga
    if (messageLower.includes('sobrecarregada') || messageLower.includes('cansada') ||
        messageLower.includes('exausta') || messageLower.includes('n√£o aguento')) {
        return 'overwhelmed';
    }

    // Palavras que indicam frustra√ß√£o
    if (messageLower.includes('frustrada') || messageLower.includes('raiva') ||
        messageLower.includes('irritada') || messageLower.includes('n√£o consigo')) {
        return 'frustrated';
    }

    // Palavras que indicam felicidade
    if (messageLower.includes('feliz') || messageLower.includes('orgulhosa') ||
        messageLower.includes('conquista') || messageLower.includes('sucesso')) {
        return 'happy';
    }

    return 'calm';
};

/**
 * Gera resposta personalizada baseada no contexto
 */
const generatePersonalizedResponse = (
    message: string,
    context: NathIAContext
): NathIAResponse => {
    const messageLower = message.toLowerCase();

    // Se n√£o for sobre maternidade, redirecionar gentilmente
    if (!validateMaternityContext(message)) {
        return {
            message: "Querida, sou especializada em apoiar m√£es em sua jornada! üíï Posso te ajudar com quest√µes sobre maternidade, desenvolvimento infantil, rotinas familiares, bem-estar materno, ou at√© mesmo momentos espirituais. Como posso te apoiar hoje? üåü",
            emotionalTone: "gentle_redirect",
            responseType: "context_redirect",
            followUpQuestions: [
                "Como est√° sendo sua jornada materna?",
                "H√° algum desafio espec√≠fico que gostaria de conversar?",
                "Como posso te apoiar hoje?"
            ]
        };
    }

    // Respostas espec√≠ficas por categoria
    if (messageLower.includes('birra') || messageLower.includes('birras') || messageLower.includes('comportamento')) {
        return generateBehavioralResponse(message, context);
    }

    if (messageLower.includes('sono') || messageLower.includes('dormir') || messageLower.includes('ins√¥nia')) {
        return generateSleepResponse(message, context);
    }

    if (messageLower.includes('sobrecarregada') || messageLower.includes('cansada') || messageLower.includes('exausta')) {
        return generateEmotionalSupportResponse(message, context);
    }

    if (messageLower.includes('rotina') || messageLower.includes('organizar') || messageLower.includes('cronograma')) {
        return generateRoutineResponse(message, context);
    }

    if (messageLower.includes('alimenta√ß√£o') || messageLower.includes('comida') || messageLower.includes('comer')) {
        return generateNutritionResponse(message, context);
    }

    if (messageLower.includes('culpa') || messageLower.includes('culpada') || messageLower.includes('erro')) {
        return generateGuiltResponse(message, context);
    }

    if (messageLower.includes('b√≠blico') || messageLower.includes('estudo') || messageLower.includes('b√≠blia')) {
        return generateBiblicalResponse(message, context);
    }

    if (messageLower.includes('vers√≠culo') || messageLower.includes('palavra')) {
        return generateScriptureResponse(message, context);
    }

    if (messageLower.includes('ora√ß√£o') || messageLower.includes('orar') || messageLower.includes('rezar')) {
        return generatePrayerResponse(message, context);
    }

    if (messageLower.includes('reflex√£o') || messageLower.includes('espiritual') || messageLower.includes('f√©')) {
        return generateSpiritualResponse(message, context);
    }

    // Resposta contextual baseada no hist√≥rico
    return generateContextualResponse(message, context);
};

/**
 * Resposta para quest√µes comportamentais
 */
const generateBehavioralResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const hasDiscussedBehavior = context.previousTopics.includes('behavior');

    let response = "";
    let practicalTips: string[] = [];

    if (hasDiscussedBehavior) {
        response = "Vejo que as birras t√™m sido um tema recorrente para voc√™s. üíô Isso √© totalmente normal! Cada crian√ßa tem seu pr√≥prio ritmo. Que tal tentarmos uma abordagem diferente hoje?";
        practicalTips = [
            "Antecipe situa√ß√µes que podem gerar birras",
            "Use linguagem positiva ('Vamos fazer isso juntos')",
            "Crie um 'cantinho da calma' em casa",
            "Celebre quando ela se acalma sozinha"
        ];
    } else {
        response = "As birras s√£o uma fase natural do desenvolvimento! üí´ Aqui est√£o estrat√©gias que realmente funcionam:";
        practicalTips = [
            "Mantenha a calma - respire fundo antes de reagir",
            "Valide os sentimentos ('Vejo que voc√™ est√° chateado, isso √© normal')",
            "Ofere√ßa escolhas limitadas ('Quer o copo azul ou vermelho?')",
            "Use distra√ß√£o criativa",
            "Crie um 'cantinho da calma' juntos"
        ];
    }

    return {
        message: response + " Lembre-se: voc√™ est√° ensinando regula√ß√£o emocional! üåà",
        emotionalTone: "understanding",
        responseType: "behavioral_guidance",
        practicalTips,
        followUpQuestions: [
            "Como tem sido a evolu√ß√£o desde nossa √∫ltima conversa?",
            "Qual situa√ß√£o espec√≠fica tem sido mais desafiadora?",
            "O que voc√™ acha que pode funcionar melhor para voc√™s?"
        ]
    };
};

/**
 * Resposta para quest√µes de sono
 */
const generateSleepResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const hasDiscussedSleep = context.previousTopics.includes('sleep');

    let response = "";
    let practicalTips: string[] = [];

    if (hasDiscussedSleep) {
        response = "O sono continua sendo um desafio? üò¥ Vamos revisar nossa estrat√©gia! Como tem sido a rotina desde nossa √∫ltima conversa?";
        practicalTips = [
            "Verifique se o ambiente est√° realmente prop√≠cio (temperatura, escurid√£o, sil√™ncio)",
            "A rotina pode precisar de pequenos ajustes",
            "Observe se h√° mudan√ßas na vida da crian√ßa que afetam o sono"
        ];
    } else {
        response = "O sono dos pequenos pode ser um desafio, mas temos estrat√©gias que funcionam! üò¥ Vamos criar uma rotina personalizada:";
        practicalTips = [
            "Hor√°rio fixo para dormir (consist√™ncia √© chave)",
            "Ambiente calmo e escuro",
            "Rotina relaxante de 30-45min (banho, hist√≥ria, m√∫sica suave)",
            "Evite telas 1h antes",
            "Use aromaterapia suave (lavanda)"
        ];
    }

    return {
        message: response + " Cada crian√ßa √© √∫nica - vamos encontrar o que funciona para voc√™s! üí§",
        emotionalTone: "calm",
        responseType: "sleep_guidance",
        practicalTips,
        followUpQuestions: [
            "Como tem sido a rotina atual?",
            "H√° algum hor√°rio que funciona melhor?",
            "O que voc√™ acha que pode estar atrapalhando o sono?"
        ]
    };
};

/**
 * Resposta para apoio emocional
 */
const generateEmotionalSupportResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const response = "Querida, √© normal se sentir assim! ü§ó A maternidade √© intensa e voc√™ est√° fazendo um trabalho incr√≠vel. Vamos cuidar de voc√™ tamb√©m:";

    const practicalTips = [
        "Pe√ßa ajuda espec√≠fica (n√£o 'ajude-me', mas 'pode dar banho no Jo√£o hoje?')",
        "Reserve 15 minutos di√°rios s√≥ para voc√™",
        "Conecte-se com outras m√£es - voc√™ n√£o est√° sozinha",
        "Lembre-se: voc√™ n√£o precisa ser perfeita, apenas presente"
    ];

    return {
        message: response + " Como posso te apoiar hoje? üíñ",
        emotionalTone: "empathetic",
        responseType: "emotional_support",
        practicalTips,
        followUpQuestions: [
            "O que tem sido mais desafiador ultimamente?",
            "Voc√™ tem uma rede de apoio?",
            "Como posso te ajudar a se sentir mais apoiada?"
        ]
    };
};

/**
 * Resposta para quest√µes de rotina
 */
const generateRoutineResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const hasDiscussedRoutine = context.previousTopics.includes('routine');

    let response = "";
    let practicalTips: string[] = [];

    if (hasDiscussedRoutine) {
        response = "Como est√° funcionando a rotina que criamos? üìÖ √Äs vezes precisamos de ajustes:";
        practicalTips = [
            "Seja flex√≠vel - a rotina serve voc√™s, n√£o o contr√°rio",
            "Inclua tempo para imprevistos (crian√ßas s√£o imprevis√≠veis!)",
            "Envolva a crian√ßa na cria√ß√£o da rotina",
            "Celebre pequenas conquistas"
        ];
    } else {
        response = "Organizar a rotina √© um superpoder materno! üìÖ Vamos criar algo que funcione para voc√™s:";
        practicalTips = [
            "Comece com hor√°rios fixos para refei√ß√µes e sono",
            "Crie um cronograma visual (desenhos, cores)",
            "Inclua tempo para brincadeiras livres",
            "Seja realista - inclua tempo para imprevistos",
            "Envolva a crian√ßa nas tarefas (mesmo que demore mais)"
        ];
    }

    return {
        message: response + " O importante √© ter uma base s√≥lida, n√£o perfei√ß√£o! ‚ú®",
        emotionalTone: "encouraging",
        responseType: "routine_planning",
        practicalTips,
        followUpQuestions: [
            "O que tem funcionado melhor na rotina atual?",
            "Qual parte da rotina precisa de mais aten√ß√£o?",
            "Como podemos tornar a rotina mais divertida?"
        ]
    };
};

/**
 * Resposta para quest√µes de alimenta√ß√£o
 */
const generateNutritionResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const hasDiscussedNutrition = context.previousTopics.includes('nutrition');

    let response = "";
    let practicalTips: string[] = [];

    if (hasDiscussedNutrition) {
        response = "Como tem sido a alimenta√ß√£o desde nossa √∫ltima conversa? üçé Lembre-se:";
        practicalTips = [
            "Ofere√ßa variedade, mas sem press√£o",
            "Seja paciente - pode levar 10+ tentativas para aceitar um alimento",
            "Torne a hora da refei√ß√£o divertida (cores, formatos diferentes)",
            "Coma junto - crian√ßas imitam o que veem"
        ];
    } else {
        response = "A alimenta√ß√£o √© uma jornada de descobertas! üçé Estrat√©gias que funcionam:";
        practicalTips = [
            "Ofere√ßa variedade de cores e texturas",
            "Seja paciente - pode levar 10+ tentativas",
            "Coma junto com a crian√ßa (imita√ß√£o √© poderosa!)",
            "Torne a hora da refei√ß√£o divertida",
            "Evite distra√ß√µes (TV, brinquedos)",
            "Respeite a saciedade da crian√ßa"
        ];
    }

    return {
        message: response + " Voc√™ est√° criando h√°bitos saud√°veis para a vida toda! üåà",
        emotionalTone: "nurturing",
        responseType: "nutrition_guidance",
        practicalTips,
        followUpQuestions: [
            "Qual tem sido o maior desafio na alimenta√ß√£o?",
            "H√° algum alimento que seu filho gosta mais?",
            "Como podemos tornar as refei√ß√µes mais prazerosas?"
        ]
    };
};

/**
 * Resposta para quest√µes de culpa
 */
const generateGuiltResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const response = "A culpa materna √© um sentimento que muitas de n√≥s conhecemos. üíô Mas saiba que:";

    const practicalTips = [
        "Voc√™ est√° fazendo o seu melhor a cada dia",
        "Erros fazem parte do aprendizado (para voc√™ e para a crian√ßa)",
        "Seu amor √© incondicional e isso √© o mais importante",
        "Voc√™ √© humana e isso √© lindo"
    ];

    return {
        message: response + " Permita-se ser gentil consigo mesma. Voc√™ √© uma m√£e incr√≠vel! ‚ú®",
        emotionalTone: "compassionate",
        responseType: "emotional_healing",
        practicalTips,
        followUpQuestions: [
            "O que tem te causado mais culpa ultimamente?",
            "Como voc√™ tem lidado com esses sentimentos?",
            "O que te ajudaria a se sentir mais confiante?"
        ]
    };
};

/**
 * Resposta para estudos b√≠blicos
 */
const generateBiblicalResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const response = "Que lindo momento espiritual! üôè Vamos refletir juntas: 'Ensina a crian√ßa no caminho em que deve andar, e ainda quando for velho n√£o se desviar√° dele.' (Prov√©rbios 22:6). A maternidade √© um chamado sagrado.";

    return {
        message: response + " Que tal come√ßarmos com um estudo b√≠blico sobre paci√™ncia e amor incondicional? Como voc√™ tem ensinado valores crist√£os para seu filho? üíï",
        emotionalTone: "spiritual",
        responseType: "biblical_guidance",
        scripture: "Prov√©rbios 22:6",
        followUpQuestions: [
            "Como voc√™ tem ensinado valores crist√£os para seu filho?",
            "H√° algum vers√≠culo que tem te fortalecido?",
            "Como podemos tornar a f√© mais presente no dia a dia?"
        ]
    };
};

/**
 * Resposta para vers√≠culos
 */
const generateScriptureResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const response = "Deus tem palavras especiais para n√≥s, m√£es! üìñ 'Porque eu bem sei os pensamentos que tenho a vosso respeito, diz o Senhor; pensamentos de paz, e n√£o de mal, para vos dar o fim que esperais.' (Jeremias 29:11). Voc√™ est√° no lugar certo, no tempo certo.";

    return {
        message: response + " Confie no processo! Que vers√≠culo tem te fortalecido ultimamente? üåü",
        emotionalTone: "inspiring",
        responseType: "scripture_sharing",
        scripture: "Jeremias 29:11",
        followUpQuestions: [
            "Que vers√≠culo tem te fortalecido ultimamente?",
            "Como voc√™ tem aplicado a Palavra na sua maternidade?",
            "H√° algum vers√≠culo que gostaria de compartilhar?"
        ]
    };
};

/**
 * Resposta para ora√ß√µes
 */
const generatePrayerResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const response = "Vamos orar juntas, querida! üôè 'Senhor, aben√ßoa esta m√£e corajosa. D√°-lhe sabedoria para cada decis√£o, paci√™ncia para os momentos dif√≠ceis, e alegria para celebrar cada conquista. Que ela sinta Seu amor incondicional em cada dia. Fortalece-a para ser o exemplo de amor que seu filho precisa. Am√©m.'";

    return {
        message: response + " üíï Voc√™ √© aben√ßoada e aben√ßoadora!",
        emotionalTone: "prayerful",
        responseType: "prayer_guidance",
        followUpQuestions: [
            "H√° algo espec√≠fico que gostaria de orar?",
            "Como posso te apoiar em sua caminhada espiritual?",
            "Voc√™ tem sentido a presen√ßa de Deus na sua maternidade?"
        ]
    };
};

/**
 * Resposta para reflex√µes espirituais
 */
const generateSpiritualResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const response = "Que momento especial de conex√£o! ‚ú® A maternidade √© um reflexo do amor divino. Cada abra√ßo, cada palavra de carinho, cada momento de paci√™ncia √© um ato de amor. Voc√™ est√° sendo instrumento de Deus na vida do seu filho.";

    return {
        message: response + " Que lindo chamado! Como voc√™ tem visto a m√£o de Deus na sua jornada materna? üåà",
        emotionalTone: "contemplative",
        responseType: "spiritual_reflection",
        followUpQuestions: [
            "Como voc√™ tem visto a m√£o de Deus na sua jornada materna?",
            "H√° algum momento em que sentiu Sua presen√ßa de forma especial?",
            "Como podemos tornar a f√© mais presente no dia a dia?"
        ]
    };
};

/**
 * Resposta contextual baseada no hist√≥rico
 */
const generateContextualResponse = (message: string, context: NathIAContext): NathIAResponse => {
    const contextualResponses = [
        "Entendo perfeitamente o que voc√™ est√° passando. Como m√£e, sei que cada desafio √© √∫nico. Vamos juntas encontrar a melhor solu√ß√£o para voc√™! üíï",
        "Que coragem voc√™ tem em compartilhar isso comigo! Muitas m√£es passam por situa√ß√µes similares. Voc√™ n√£o est√° sozinha nessa jornada. üåü",
        "Sua preocupa√ß√£o √© totalmente v√°lida. A maternidade √© cheia de momentos assim. Vamos conversar sobre isso com carinho e sabedoria. ü§±",
        "Admiro sua dedica√ß√£o em buscar ajuda. Isso mostra o quanto voc√™ ama seu filho. Vamos trabalhar juntas para resolver isso. üí™",
        "Cada m√£e tem sua pr√≥pria jornada, mas compartilhamos muitos sentimentos em comum. Obrigada por confiar em mim. Vamos juntas! ‚ú®"
    ];

    let response = "";

    if (context.emotionalState === 'anxious') {
        response = "Vejo que voc√™ est√° passando por momentos de ansiedade. üíô Isso √© normal na maternidade. Vamos trabalhar juntas para te trazer mais calma e confian√ßa.";
    } else if (context.emotionalState === 'overwhelmed') {
        response = "Querida, √© normal se sentir sobrecarregada. ü§ó A maternidade √© intensa, mas voc√™ est√° fazendo um trabalho incr√≠vel. Vamos cuidar de voc√™ tamb√©m.";
    } else if (context.emotionalState === 'frustrated') {
        response = "Entendo sua frustra√ß√£o. üí™ Ser m√£e n√£o √© f√°cil, mas voc√™ est√° no caminho certo. Vamos encontrar estrat√©gias que funcionem para voc√™s.";
    } else if (context.emotionalState === 'happy') {
        response = "Que lindo ver sua alegria! üåü A maternidade tem seus momentos m√°gicos, n√£o √©? Vamos celebrar essas conquistas juntas!";
    } else {
        response = contextualResponses[Math.floor(Math.random() * contextualResponses.length)];
    }

    return {
        message: response,
        emotionalTone: "supportive",
        responseType: "contextual",
        followUpQuestions: [
            "Como voc√™ tem se sentido ultimamente?",
            "H√° algo espec√≠fico que gostaria de conversar?",
            "Como posso te apoiar melhor hoje?"
        ]
    };
};

/**
 * Fun√ß√£o principal para gerar resposta da NathIA
 */
export const generateNathIAResponse = async (
    userMessage: string,
    userId: string,
    chatHistory: any[] = []
): Promise<NathIAResponse> => {
    try {
        logDebug('Generating NathIA response', {
            action: 'generateNathIAResponse',
            feature: 'nathia-enhanced',
            userId,
            messageLength: userMessage.length
        });

        // Simular delay de processamento mais realista
        await new Promise(resolve => setTimeout(resolve, 2000 + Math.random() * 1500));

        // Analisar contexto
        const emotionalState = analyzeEmotionalState(userMessage, chatHistory);
        const previousTopics = chatHistory
            .slice(-5)
            .map(msg => msg.content.toLowerCase())
            .join(' ')
            .split(' ')
            .filter(word => ['birra', 'sono', 'alimenta√ß√£o', 'rotina', 'culpa', 'b√≠blico', 'ora√ß√£o'].includes(word));

        const context: NathIAContext = {
            userId,
            chatHistory,
            userProfile: null, // Seria preenchido com dados reais do usu√°rio
            currentTopic: null,
            emotionalState,
            previousTopics,
            userPreferences: {
                responseStyle: 'warm',
                includeScripture: true,
                includePracticalTips: true
            }
        };

        // Gerar resposta personalizada
        const response = generatePersonalizedResponse(userMessage, context);

        logInfo('NathIA response generated', {
            action: 'generateNathIAResponse',
            feature: 'nathia-enhanced',
            userId,
            responseType: response.responseType,
            emotionalTone: response.emotionalTone
        });

        return response;

    } catch (error) {
        handleError(error as Error, {
            action: 'generateNathIAResponse',
            feature: 'nathia-enhanced',
            userId
        }, 'nathia-enhanced');

        // Resposta de fallback
        return {
            message: "Desculpe, estou passando por um momento t√©cnico. Mas saiba que estou aqui para te apoiar! üíï Como posso te ajudar hoje?",
            emotionalTone: "apologetic",
            responseType: "fallback",
            followUpQuestions: [
                "Como posso te apoiar hoje?",
                "H√° algo espec√≠fico que gostaria de conversar?"
            ]
        };
    }
};
