name: PR Management

on:
  schedule:
    # Executa todo dia √†s 2:00 UTC para manuten√ß√£o
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  manage-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Clean up stale auto PRs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üßπ Verificando PRs autom√°ticos obsoletos..."
          
          # Lista PRs autom√°ticos abertos h√° mais de 30 dias
          STALE_PRS=$(gh pr list \
            --label "auto-generated" \
            --state "open" \
            --json number,title,createdAt \
            --jq '.[] | select(now - (.createdAt | fromdateiso8601) > 2592000) | .number')
          
          if [ ! -z "$STALE_PRS" ]; then
            for PR_NUMBER in $STALE_PRS; do
              echo "‚ö†Ô∏è Marcando PR #$PR_NUMBER como stale"
              
              gh pr comment $PR_NUMBER --body "ü§ñ **PR Stale Detectado**
              
              Este PR autom√°tico est√° aberto h√° mais de 30 dias sem atividade.
              
              **A√ß√µes recomendadas:**
              - ‚úÖ Fazer merge se estiver pronto
              - üîÑ Atualizar com mudan√ßas recentes
              - ‚ùå Fechar se n√£o for mais necess√°rio
              
              Este PR ser√° fechado automaticamente em 7 dias se n√£o houver atividade.
              
              Para manter aberto, adicione um coment√°rio ou remova a label \`stale\`."
              
              gh pr edit $PR_NUMBER --add-label "stale"
            done
          else
            echo "‚úÖ Nenhum PR stale encontrado"
          fi

      - name: Auto-close very old stale PRs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîí Verificando PRs para fechamento autom√°tico..."
          
          # Lista PRs stale h√° mais de 7 dias
          OLD_STALE_PRS=$(gh pr list \
            --label "stale" \
            --state "open" \
            --json number,title,updatedAt \
            --jq '.[] | select(now - (.updatedAt | fromdateiso8601) > 604800) | .number')
          
          if [ ! -z "$OLD_STALE_PRS" ]; then
            for PR_NUMBER in $OLD_STALE_PRS; do
              echo "üö™ Fechando PR #$PR_NUMBER (stale h√° mais de 7 dias)"
              
              gh pr comment $PR_NUMBER --body "ü§ñ **PR Fechado Automaticamente**
              
              Este PR foi fechado automaticamente devido √† inatividade prolongada (37+ dias).
              
              **Para reabrir:**
              1. Remova a label \`stale\`
              2. Adicione coment√°rio explicando a necessidade
              3. Atualize o c√≥digo se necess√°rio
              
              **Raz√£o:** Manuten√ß√£o autom√°tica de PRs inativos."
              
              gh pr close $PR_NUMBER --comment "Fechado automaticamente - PR stale h√° mais de 37 dias"
            done
          else
            echo "‚úÖ Nenhum PR old-stale encontrado"
          fi

      - name: Update dependency PRs status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üì¶ Verificando status de PRs de depend√™ncias..."
          
          # Lista PRs de depend√™ncias abertos
          DEP_PRS=$(gh pr list \
            --label "dependencies" \
            --state "open" \
            --json number,title,headRefName)
          
          if [ "$(echo '$DEP_PRS' | jq length)" -gt 0 ]; then
            echo "Encontrados $(echo '$DEP_PRS' | jq length) PRs de depend√™ncias"
            
            # Verifica conflitos
            echo '$DEP_PRS' | jq -r '.[].number' | while read PR_NUMBER; do
              if [ ! -z "$PR_NUMBER" ]; then
                # Verifica se h√° conflitos
                PR_STATUS=$(gh pr view $PR_NUMBER --json mergeable --jq .mergeable)
                
                if [ "$PR_STATUS" = "CONFLICTING" ]; then
                  echo "‚ö†Ô∏è PR #$PR_NUMBER tem conflitos - adicionando coment√°rio"
                  
                  gh pr comment $PR_NUMBER --body "ü§ñ **Conflitos Detectados**
                  
                  Este PR de depend√™ncias tem conflitos que precisam ser resolvidos.
                  
                  **Para resolver:**
                  1. Atualize a branch com main: \`git merge main\`
                  2. Resolva conflitos manualmente
                  3. Commit e push das resolu√ß√µes
                  
                  **Ou recrie o PR:**
                  1. Feche este PR
                  2. Execute manualmente: Actions ‚Üí Auto Dependency Update PR
                  
                  Conflitos s√£o comuns quando m√∫ltiplas atualiza√ß√µes acontecem."
                  
                  gh pr edit $PR_NUMBER --add-label "conflicts"
                fi
              fi
            done
          else
            echo "‚úÖ Nenhum PR de depend√™ncias ativo"
          fi

      - name: Sync auto-fix PRs with issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîó Sincronizando PRs de fix com issues..."
          
          # Lista PRs com label auto-generated que referenciam issues
          gh pr list \
            --label "auto-generated" \
            --state "open" \
            --json number,title,body | \
            jq -r '.[] | select(.body | test("#[0-9]+")) | .number' | \
            while read PR_NUMBER; do
              if [ ! -z "$PR_NUMBER" ]; then
                # Extrai n√∫mero da issue do corpo do PR
                ISSUE_NUMBER=$(gh pr view $PR_NUMBER --json body --jq .body | grep -o '#[0-9]\+' | head -1 | sed 's/#//')
                
                if [ ! -z "$ISSUE_NUMBER" ]; then
                  # Verifica se issue ainda est√° aberta
                  ISSUE_STATE=$(gh issue view $ISSUE_NUMBER --json state --jq .state 2>/dev/null || echo "NOT_FOUND")
                  
                  if [ "$ISSUE_STATE" = "CLOSED" ]; then
                    echo "üìù Issue #$ISSUE_NUMBER foi fechada - comentando no PR #$PR_NUMBER"
                    
                    gh pr comment $PR_NUMBER --body "üéâ **Issue Relacionada Foi Fechada**
                    
                    A issue #$ISSUE_NUMBER que este PR resolve foi fechada.
                    
                    **Pr√≥ximos passos:**
                    - ‚úÖ Se o PR resolve a issue, pode fazer merge
                    - üîÑ Se ainda h√° trabalho, considere reabrir a issue
                    - ‚ùå Se n√£o √© mais necess√°rio, pode fechar este PR
                    
                    Verifique se este PR ainda √© relevante."
                    
                    gh pr edit $PR_NUMBER --add-label "issue-closed"
                  fi
                fi
              fi
            done

      - name: Report PR statistics
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üìä Gerando relat√≥rio de PRs autom√°ticos..."
          
          # Estat√≠sticas gerais
          TOTAL_AUTO_PRS=$(gh pr list --label "auto-generated" --state "all" --json number --jq '. | length')
          OPEN_AUTO_PRS=$(gh pr list --label "auto-generated" --state "open" --json number --jq '. | length')
          MERGED_AUTO_PRS=$(gh pr list --label "auto-generated" --state "merged" --json number --jq '. | length')
          
          # PRs por tipo
          DEPENDENCY_PRS=$(gh pr list --label "dependencies" --state "open" --json number --jq '. | length')
          FEATURE_PRS=$(gh pr list --label "feature" --state "open" --json number --jq '. | length')
          BUGFIX_PRS=$(gh pr list --label "bugfix" --state "open" --json number --jq '. | length')
          
          # PRs com problemas
          STALE_PRS=$(gh pr list --label "stale" --state "open" --json number --jq '. | length')
          CONFLICT_PRS=$(gh pr list --label "conflicts" --state "open" --json number --jq '. | length')
          
          echo "
          ## üìà Relat√≥rio de PRs Autom√°ticos
          
          **Data:** $(date +'%Y-%m-%d %H:%M UTC')
          
          ### üìä Estat√≠sticas Gerais
          - ü§ñ Total de PRs autom√°ticos: $TOTAL_AUTO_PRS
          - üìÇ PRs abertos: $OPEN_AUTO_PRS
          - ‚úÖ PRs merged: $MERGED_AUTO_PRS
          
          ### üè∑Ô∏è Por Categoria (Abertos)
          - üì¶ Depend√™ncias: $DEPENDENCY_PRS
          - ‚ú® Features: $FEATURE_PRS
          - üêõ Bug fixes: $BUGFIX_PRS
          
          ### ‚ö†Ô∏è Aten√ß√£o Necess√°ria
          - üïê PRs stale: $STALE_PRS
          - ‚öîÔ∏è PRs com conflitos: $CONFLICT_PRS
          
          ---
          *Relat√≥rio gerado automaticamente*
          " > pr_report.md
          
          echo "‚úÖ Relat√≥rio salvo em pr_report.md"
          
          # Se h√° muitos PRs com problemas, cria issue
          PROBLEM_COUNT=$((STALE_PRS + CONFLICT_PRS))
          
          if [ $PROBLEM_COUNT -gt 5 ]; then
            echo "‚ö†Ô∏è Muitos PRs com problemas ($PROBLEM_COUNT) - criando issue de alerta"
            
            gh issue create \
              --title "üö® Manuten√ß√£o de PRs Necess√°ria - $PROBLEM_COUNT PRs precisam de aten√ß√£o" \
              --body "$(cat pr_report.md)

          ### üîß A√ß√µes Recomendadas
          
          1. **PRs Stale ($STALE_PRS):** Revisar e decidir merge/close
          2. **PRs com Conflitos ($CONFLICT_PRS):** Resolver conflitos ou recriar
          
          ### üîç Como Investigar
          
          \`\`\`bash
          # Ver PRs stale
          gh pr list --label stale
          
          # Ver PRs com conflitos
          gh pr list --label conflicts
          
          # Ver todos PRs autom√°ticos
          gh pr list --label auto-generated
          \`\`\`
          
          **Esta issue foi criada automaticamente devido ao alto n√∫mero de PRs problem√°ticos.**" \
              --label "maintenance,auto-generated,high-priority"
          fi